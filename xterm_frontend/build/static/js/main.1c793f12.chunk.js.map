{"version":3,"sources":["../node_modules/react-xterm/node_modules/xterm/dist/addons sync /^/.//.*$","../node_modules/express/lib sync","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyContext","App","props","context","inputRef","React","createRef","xterm","term","getTerminal","curline","sessionId","prompt","write","writeln","on","key","ev","printable","altKey","ctrlKey","metaKey","printGameBlock","txt","forEach","paragraph","index","lines","split","join","console","log","length","keyCode","cmd","axios","post","session_id","command","then","response","data","text","fetch","res","json","result","games","uname","secret","game_id","user","password","game","slice","runFakeTerminal","this","current","componentWillUnmount","className","ref","addons","style","overflow","position","width","height","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1c793f12.chunk.js","sourcesContent":["var map = {\n\t\"./attach/attach\": 75,\n\t\"./attach/attach.js\": 75,\n\t\"./attach/attach.js.map\": 274,\n\t\"./attach/attach.test\": 113,\n\t\"./attach/attach.test.js\": 113,\n\t\"./attach/attach.test.js.map\": 297,\n\t\"./attach/package\": 120,\n\t\"./attach/package.json\": 120,\n\t\"./attach/tsconfig\": 121,\n\t\"./attach/tsconfig.json\": 121,\n\t\"./fit/fit\": 78,\n\t\"./fit/fit.js\": 78,\n\t\"./fit/fit.js.map\": 298,\n\t\"./fit/fit.test\": 122,\n\t\"./fit/fit.test.js\": 122,\n\t\"./fit/fit.test.js.map\": 299,\n\t\"./fit/package\": 123,\n\t\"./fit/package.json\": 123,\n\t\"./fit/tsconfig\": 124,\n\t\"./fit/tsconfig.json\": 124,\n\t\"./fullscreen/fullscreen\": 79,\n\t\"./fullscreen/fullscreen.css\": 300,\n\t\"./fullscreen/fullscreen.js\": 79,\n\t\"./fullscreen/fullscreen.js.map\": 301,\n\t\"./fullscreen/fullscreen.test\": 125,\n\t\"./fullscreen/fullscreen.test.js\": 125,\n\t\"./fullscreen/fullscreen.test.js.map\": 302,\n\t\"./fullscreen/package\": 126,\n\t\"./fullscreen/package.json\": 126,\n\t\"./fullscreen/tsconfig\": 127,\n\t\"./fullscreen/tsconfig.json\": 127,\n\t\"./search/SearchHelper\": 128,\n\t\"./search/SearchHelper.js\": 128,\n\t\"./search/SearchHelper.js.map\": 303,\n\t\"./search/package\": 129,\n\t\"./search/package.json\": 129,\n\t\"./search/search\": 130,\n\t\"./search/search.js\": 130,\n\t\"./search/search.js.map\": 304,\n\t\"./search/tsconfig\": 131,\n\t\"./search/tsconfig.json\": 131,\n\t\"./terminado/package\": 132,\n\t\"./terminado/package.json\": 132,\n\t\"./terminado/terminado\": 80,\n\t\"./terminado/terminado.js\": 80,\n\t\"./terminado/terminado.js.map\": 305,\n\t\"./terminado/terminado.test\": 133,\n\t\"./terminado/terminado.test.js\": 133,\n\t\"./terminado/terminado.test.js.map\": 306,\n\t\"./terminado/tsconfig\": 134,\n\t\"./terminado/tsconfig.json\": 134,\n\t\"./winptyCompat/package\": 135,\n\t\"./winptyCompat/package.json\": 135,\n\t\"./winptyCompat/tsconfig\": 136,\n\t\"./winptyCompat/tsconfig.json\": 136,\n\t\"./winptyCompat/winptyCompat\": 81,\n\t\"./winptyCompat/winptyCompat.js\": 81,\n\t\"./winptyCompat/winptyCompat.js.map\": 307,\n\t\"./winptyCompat/winptyCompat.test\": 137,\n\t\"./winptyCompat/winptyCompat.test.js\": 137,\n\t\"./winptyCompat/winptyCompat.test.js.map\": 308,\n\t\"./zmodem/demo/app\": 138,\n\t\"./zmodem/demo/app.js\": 138,\n\t\"./zmodem/demo/main\": 218,\n\t\"./zmodem/demo/main.js\": 218,\n\t\"./zmodem/package\": 219,\n\t\"./zmodem/package.json\": 219,\n\t\"./zmodem/tsconfig\": 220,\n\t\"./zmodem/tsconfig.json\": 220,\n\t\"./zmodem/zmodem\": 104,\n\t\"./zmodem/zmodem.js\": 104,\n\t\"./zmodem/zmodem.js.map\": 501,\n\t\"./zmodem/zmodem.test\": 221,\n\t\"./zmodem/zmodem.test.js\": 221,\n\t\"./zmodem/zmodem.test.js.map\": 502\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 273;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 387;","import React, {Component} from 'react';\nimport './App.css';\nimport XTerm, {Terminal} from \"react-xterm\";\nimport axios from 'axios';\nimport \"xterm/css/xterm.css\";\ninterface IState {\n}\ninterface IProps {\n}\nclass App extends Component<IProps, IState> {\n\n    constructor(props: IProps, context?: any) {\n        super(props, context);\n        this.inputRef=React.createRef()\n    }\n    componentDidMount() {\n        runFakeTerminal(this.inputRef.current!!);\n    }\n    componentWillUnmount() {\n        this.inputRef.current?.componentWillUnmount();\n    }\n\n    private inputRef: React.RefObject<XTerm>;\n\n    render() {\n        return (\n            <div className=\"App\">\n                <XTerm ref={this.inputRef}\n                       addons={['fit', 'fullscreen', 'search']}\n                       style={{\n                        overflow: 'hidden',\n                        position: 'relative',\n                        width: '100%',\n                        height: '100%'\n                       }}/>\n            </div>\n        );\n    }\n}\n\ninterface StartResposne {\n    session_id: string\n    text: string\n}\n\nfunction runFakeTerminal(xterm: XTerm) {\n    const term: Terminal = xterm.getTerminal();\n    var shellprompt = '$ ';\n    var curline = '';\n    var sessionId: string = '';\n\n    function prompt () {\n        curline = '';\n        xterm.write('\\r\\n' + shellprompt);\n    }\n    xterm.writeln('\\u001b[31mWelcome to xterm.js\\u001b[0m');\n    xterm.writeln('This is a local terminal emulation, without a real terminal in the back-end.');\n    xterm.writeln('Type some keys and commands to play around.');\n    xterm.writeln('');\n    prompt();\n\n    term.on('key', function (key, ev) {\n        var printable = (\n            !ev!!.altKey && !ev!!.ctrlKey && !ev!!.metaKey\n        );\n\n        const printGameBlock = (txt: string[]) => {\n            txt.forEach((paragraph, index) => {\n                const lines = paragraph.split('<br>').join('\\r\\n');\n                console.log(lines);\n                xterm.write(lines);\n                if(index != txt.length - 1)\n                    xterm.write('\\r\\n')\n            });\n        }\n\n        if (ev!!.keyCode == 13) {\n            console.log(curline);\n            xterm.write('\\r\\n');\n            const cmd = curline.split(' ')\n            \n            if(sessionId.length > 0){\n                axios.post('/game/update', {\n                    session_id: sessionId,\n                    command: curline\n                })\n                .then(response => {\n                    console.log(response);\n                    printGameBlock(response.data.text);\n                    prompt();\n                })\n            }\n            else{\n                switch(cmd[0]){\n\n                    case 'list':\n                    case 'ls':\n                        fetch('/game/list')\n                            .then(res => res.json())\n                            .then(result =>{\n                                xterm.write(result.games.join('\\r\\n'));\n                                curline = '';\n                                prompt();\n                            });\n                        break;\n\n                    case 'start':\n                        const uname = cmd[1];\n                        const secret = cmd[2];\n                        const game_id = cmd[3];\n                        try{\n                            axios.post('/game/start',{\n                                user:     uname,\n                                password: secret,\n                                game:     game_id\n                            })\n                            .then(response => {\n                                console.log(response);\n                                sessionId = response.data.session_id;\n                                printGameBlock(response.data.text);\n                                prompt();\n                            });\n                        }\n                        catch(e) {\n                            xterm.write(e);\n                            prompt();\n                        }\n                        break;\n\n                    default:\n                        xterm.write(`Unknown command ${cmd[0]}`)\n                        prompt();\n                        break;\n                }\n            }\n        } else if (ev!!.keyCode == 8) {\n            // Do not delete the prompt\n            if (curline.length > 0) {\n                curline = curline.slice(0, -1);\n                xterm.write('\\b \\b');\n            }\n        } else if (printable) {\n            curline += key;\n            xterm.write(key);\n        }\n    });\n\n    term.on('paste', function (data, ev) {\n        xterm.write(data);\n    });\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}