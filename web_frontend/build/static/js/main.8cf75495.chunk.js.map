{"version":3,"sources":["components/gameTerminal.js","App.js","theme.js","index.js"],"names":["GameTerminal","props","useState","sessionId","setSessionId","printGameBlock","txt","print","lines","split","join","console","log","style","display","justifyContent","alignItems","height","color","backgroundColor","barColor","fontWeight","fontSize","commandPassThrough","cmd","axios","post","session_id","command","then","response","data","text","fetch","res","json","result","games","listGames","shift","user_id","game_id","pass","length","argId","user","password","game","startGame","App","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"4OA0IeA,EArIM,SAASC,GAAO,IAAD,EACEC,qBADF,mBACzBC,EADyB,KACdC,EADc,KAkB1BC,EAAiB,SAACC,EAAKC,GAAW,IAAD,gBACdD,GADc,IACnC,IAAI,EAAJ,qBAAyB,CAAC,IAKhBE,EALe,QAKGC,MAAM,QAAQC,KAAK,MAC3CC,QAAQC,IAAIJ,GACZD,EAAMC,IARyB,gCA+FvC,OACI,yBACIK,MAAO,CACHC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,UAGZ,kBAAC,IAAD,CACIC,MAAM,QACNC,gBAAgB,QAChBC,SAAS,QACTP,MAAO,CAAEQ,WAAY,OAAQC,SAAU,OACvCC,mBAvCU,SAACC,EAAKjB,GACxB,GAAGJ,EACCsB,IAAMC,KAAK,eAAgB,CACvBC,WAAYxB,EACZyB,QAASJ,EAAId,KAAK,OAErBmB,MAAK,SAAAC,GACFnB,QAAQC,IAAIkB,GACZzB,EAAeyB,EAASC,KAAKC,KAAMzB,WAIvC,OAAOiB,EAAI,IACP,IAAK,KACL,IAAK,QA/FC,SAACjB,GACf0B,MAAM,mCACDJ,MAAK,SAAAK,GAAG,OAAIA,EAAIC,OAChBN,MACG,SAACO,GACG7B,EAAM6B,EAAOC,MAAM3B,KAAK,aA2FxB4B,CAAU/B,GACV,MACJ,IAAK,SA3EC,SAACiB,EAAKjB,GACpBiB,EAAIe,QAKJ,IAJA,IAAIC,EAAU,GACVC,EAAU,GACVC,EAAO,GAELlB,EAAImB,OAAS,GAAE,CACjB,IAAMC,EAAQpB,EAAIe,QAClB,OAAOK,GACH,IAAK,KACL,IAAK,SACDJ,EAAUhB,EAAIe,QACd,MACJ,IAAK,KACL,IAAK,WACDG,EAAOlB,EAAIe,QACX,MACJ,QACI,GAAe,KAAZE,EAKC,YADAlC,EAAM,mBAAD,OAAoBqC,EAApB,MAHLH,EAAUG,GASX,KAAZJ,EAIS,KAATE,EAIY,KAAZD,EAUHhB,IAAMC,KAAK,cAAe,CACtBmB,KAAML,EACNM,SAAUJ,EACVK,KAAMN,IAETZ,MAAK,SAAAC,GACFnB,QAAQC,IAAIkB,GACZ1B,EAAa0B,EAASC,KAAKJ,YAC3BtB,EAAeyB,EAASC,KAAKC,KAAMzB,MAjBnCA,EAAM,yBAJNA,EAAM,kCAJNA,EAAM,gCA+CEyC,CAAUxB,EAAKjB,GACf,MACJ,QACIA,EAAM,mBAAD,OAAoBiB,EAApB,YC/GV,SAASyB,IACtB,OACE,6BACI,kBAAC,EAAD,O,oBCeOC,EAjBDC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,IAAIC,MAEZC,WAAY,CACVC,QAAS,WCTfC,IAASC,OACP,kBAACC,EAAA,EAAD,CAAeb,MAAOA,GAEpB,kBAACc,EAAA,EAAD,MACA,kBAACf,EAAD,OAEFgB,SAASC,cAAc,W","file":"static/js/main.8cf75495.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport Terminal from 'terminal-in-react';\n// import bcrypt from 'bcrypt';\n\nconst GameTerminal = function(props){\n    const [sessionId, setSessionId] = useState();\n\n    const test = ()=>{\n        return \"Hello World\"\n    }\n    \n    const listGames = (print) =>{\n        fetch('http://127.0.0.1:8000/game/list')\n            .then(res => res.json()\n            .then(\n                (result) => {\n                    print(result.games.join('\\n'));\n                }    \n            )\n        )\n    }\n\n    const printGameBlock = (txt, print) => {\n        for(var paragraph of txt){\n            // const lines = paragraph.split('<br>');\n            // for(var line of lines){\n            //     print(line)\n            // }\n            const lines = paragraph.split('<br>').join('\\n');\n            console.log(lines);\n            print(lines);\n        }\n    }\n\n    const startGame = (cmd, print) => {\n        cmd.shift();\n        var user_id = \"\";\n        var game_id = \"\";\n        var pass = \"\";\n\n        while(cmd.length > 0){\n            const argId = cmd.shift();\n            switch(argId){\n                case '-u':\n                case '--user':\n                    user_id = cmd.shift();\n                    break;\n                case '-s':\n                case '--secret':\n                    pass = cmd.shift();\n                    break;\n                default:\n                    if(game_id === ''){\n                        game_id = argId;\n                    }\n                    else{\n                        print(`Unkown argument ${argId}.`);\n                        return;\n                    }\n            }\n        }\n\n        if(user_id === ''){\n            print('Missing -u (--user) argument');\n            return;\n        }\n        if(pass === ''){\n            print('Missing argument -s (--secret)');\n            return;\n        }\n        if(game_id === ''){\n            print('Missing argument game');\n            return;\n        }\n\n        // bcrypt.hash(pass, 10, (err, hash) => {\n        //     if(err){\n        //         console.error(err);\n        //         return;\n        //     }\n        axios.post('/game/start', {\n            user: user_id,\n            password: pass,\n            game: game_id\n        })\n        .then(response => {\n            console.log(response);\n            setSessionId(response.data.session_id);\n            printGameBlock(response.data.text, print);\n        });\n    }\n\n    const handleCommand = (cmd, print) => {\n        if(sessionId){\n            axios.post('/game/update', {\n                session_id: sessionId,\n                command: cmd.join(\" \")\n            })\n            .then(response=>{\n                console.log(response);\n                printGameBlock(response.data.text, print);\n            })\n        }\n        else{\n            switch(cmd[0]) {\n                case 'ls':\n                case 'list':\n                    listGames(print);\n                    break;\n                case 'start':\n                    startGame(cmd, print);\n                    break;\n                default:\n                    print(`Unknown command ${cmd}.`)\n            }    \n        }\n    }\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100vh\"\n            }}\n        >\n            <Terminal\n                color='green'\n                backgroundColor='black'\n                barColor='black'\n                style={{ fontWeight: \"bold\", fontSize: \"1em\" }}\n                commandPassThrough={handleCommand}\n            />\n        </div>\n    )\n}\n\nexport default GameTerminal;\n\n","import React from 'react';\nimport GameTerminal from './components/gameTerminal';\n\nexport default function App() {\n  return (\n    <div>\n        <GameTerminal />\n    </div>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}